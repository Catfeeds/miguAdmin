<?php

/**
 * Created by PhpStorm.
 * User:
 * Date: 2016/05/13
 * Time: 11:48
 */
class WallpaperController extends VController{

    public function actionIndex(){
        $id=$_GET['nid'];
        $type = isset($_GET['type']) ? $_GET['type'] : '';
        if(!empty($id) && empty($type)){
            $page = 10;
            $data = $this->getPageInfo($page);
            $criteria = new CDbCriteria();
            $criteria->select = '*';
            $count = VerWall::model()->count($criteria);
            $criteria->offset = $data['start'];
            $criteria->limit = $data['limit'];
            $criteria->order = 'addTime desc';
            $list = VerWall::model()->findAll($criteria);
            $url = $this->createUrl($this->action->id);
            $pagination = $this->renderPagination($url,$count,$page,$data['currentPage']);
            $this->render('index',array('list'=>$list,'page'=>$pagination));
        }else{
            $gid  = !empty($_REQUEST['gid'])?$_REQUEST['gid']:'';
            $page = 10;
            $data = $this->getPageInfo($page);
            $criteria = new CDbCriteria();
            $criteria->select = '*';
            $count = VerWall::model()->count($criteria);
            if(!empty($gid)){
                $criteria->addCondition("gid=".$gid);
            }
            $criteria->order = 'addTime desc';
            $list = VerWall::model()->findAll($criteria);
            $url = $this->createUrl($this->action->id);
            $pagination = $this->renderPagination($url,$count,$page,$data['currentPage']);
           // print_r($list);
            $this->render('index',array('list'=>$list,'page'=>$pagination));
        }


    }

    public function actionAdd(){
        try{
		//var_dump($_REQUEST);die;
            if(!empty($_GET['id'])){
                $paper = MvWallpaper::model()->findByPk($_GET['id']);
                $id = $_GET['id'];
                $provinceCode = array_map(create_function('$record','return $record->attributes;'),MvWallpaper::model()->findAll("id = $id"));
                if(!empty($provinceCode)){
                    $p = $provinceCode[0]['province'];//查询出来的省份编码
                    $c = $provinceCode[0]['city'];//查询出来的城市编码
                    $cityCode = array_map(create_function('$record','return $record->attributes;'),City::model()->findAll("provinceId = $p"));
                }
            }else{
                $paper = new MvWallpaper();
                $paper->addTime = time();
            }
            if(!empty($_POST)){

                $paper ->title = trim($_POST['title']);

                $sheng = explode('_',$_POST['province']);
                $paper -> province = trim($sheng[0]);
                $shi = explode('_',$_POST['city']);
                $paper -> city     = trim($shi[0]);


                if(!empty($_FILES['pic']['tmp_name'])){
                    $filename = 'pic';
                    $path = $this->up($filename);
                    Common::synchroPic($path);
                    //$paper ->pic    = 'http://' . $_SERVER['HTTP_HOST'] . '/file/' . $path;
                    $paper ->pic    = 'http://117.131.17.46:8086/file/' . $path;
                    //$paper ->pic    = 'http://192.168.1.109/file/' . $path;
                }
                if(!$paper->save()){
                    LogWriter::logModelSaveError($paper,__METHOD__,$paper->attributes);
                    throw new ExceptionEx('信息保存失败');
                }

                $this->PopMsg('保存成功');
                $this->redirect($this->get_url('wallpaper','index'));
            }
        }catch (ExceptionEx $ex){
            $this->PopMsg($ex->getMessage());
        }catch (Exception $e){
            $this->log($e->getMessage());
        }

        $province = Province::model()->findAll("1=1 order by id asc");

        $p = isset($p) ? $p : '';
        $cityCode = isset($cityCode) ? $cityCode : '';
        $c = isset($c) ? $c : '';

        $this->render('add',array('wallpaper'=>$paper,'province'=>$province,'provinceCode'=>$p,'city'=>$cityCode,'cityCode'=>$c));
    }

    public function actionNewAdd()
    {
        $this->render('newAdd');
    }

    public function actionUpdate()
    {
        try{
            if(!empty($_GET['id'])){
                $paper = VerWall::model()->findByPk($_GET['id']);
                $id = $_GET['id'];
                $provinceCode = array_map(create_function('$record','return $record->attributes;'),VerWall::model()->findAll("id = $id"));
                if(!empty($provinceCode)){
                    $p = $provinceCode[0]['province'];//查询出来的省份编码
                    $c = $provinceCode[0]['city'];//查询出来的城市编码
                    $cityCode = array_map(create_function('$record','return $record->attributes;'),City::model()->findAll("provinceId = $p"));
                }
            }else{
                $paper = new VerWall();
                $paper->addTime = time();
            }
            if(!empty($_POST)){

                $paper ->title = trim($_POST['title']);

                $sheng = explode('_',$_POST['province']);
                $paper -> province = trim($sheng[0]);
                $shi = explode('_',$_POST['city']);
                $paper -> city     = trim($shi[0]);

                if(!empty($_FILES['pic']['tmp_name'])){
                    $filename = 'pic';
                    $path = $this->up($filename);
                    Common::synchroPic($path);
                    //$paper ->pic    = 'http://' . $_SERVER['HTTP_HOST'] . '/file/' . $path;
                    $paper ->pic    = 'http://117.131.17.46:8086/file/' . $path;
                    //$paper ->pic    = 'http://192.168.1.109/file/' . $path;
                }
                if(!$paper->save()){
                    LogWriter::logModelSaveError($paper,__METHOD__,$paper->attributes);
                    throw new ExceptionEx('信息保存失败');
                }

                $this->PopMsg('保存成功');
                $this->redirect($this->get_url('wallpaper','index'));
            }
        }catch (ExceptionEx $ex){
            $this->PopMsg($ex->getMessage());
        }catch (Exception $e){
            $this->log($e->getMessage());
        }

        $province = Province::model()->findAll("1=1 order by id asc");

        $p = isset($p) ? $p : '';
        $cityCode = isset($cityCode) ? $cityCode : '';
        $c = isset($c) ? $c : '';
	//var_dump($p);die;
        $this->render('update',array('wallpaper'=>$paper,'province'=>$province,'provinceCode'=>$p,'city'=>$cityCode,'cityCode'=>$c));
    }

    public function actionDoNewAdd()
    {
        $model = new VerWall();
        $model->title = trim($_POST['title']);
        $model->thum =  trim($_POST['thum']);
        //$model->pic =  trim($_POST['pic']);
        $pic = trim($_POST['pic']);
        $pic = basename($pic);
        Common::synchroPic($pic);
        $model->pic = 'http://117.131.17.46:8086/file/' . $pic;
        $model->gid =  trim($_POST['gid']);
        $model->addTime = time();
        if($model->save()){
            echo '200';
        }else{
            echo '500';
        }
    }

    public function actionDoUpdate()
    {
	//var_dump($_POST);die;
        $id = trim($_POST['id']);
        $title = trim($_POST['title']);
        $thum = trim($_POST['thum']);
        //$pic = trim($_POST['pic']);
        $pic = trim($_POST['pic']);
        $pic = basename($pic);
        Common::synchroPic($pic);
        $pic = 'http://117.131.17.46:8086/file/' . $pic;;
        $gid = trim($_POST['gid']);
        $addTime = time();
        $sql_set = "update yd_ver_wall set `title`='$title',`thum`='$thum',`pic`='$pic',`gid`='$gid',`addTime`='$addTime' ";
        $sql_where = " where id=$id";
        $sql = $sql_set.$sql_where;
        $res = SQLManager::execute($sql);
        if($res){
           echo '200';
        }else{
            echo '500';
        }
    }

    public function actionDel(){
        if(empty($_POST['id'])) $this->die_json(array('code'=>404,'msg'=>'参数不能为空'));
        $del = VerWall::model()->deleteByPk($_POST['id']);
        if(!$del){
            $this->die_json(array('code'=>404,'msg'=>'删除失败'));
        }
      //  $title = count($del) > 1 ? '' : $del[0]['name'];
        //$this->RecordOperatingLog(MSG::MYSQL_EDIT_DEL,$del,'权限组',$title);
        $this->die_json(array('code'=>404,'msg'=>'删除成功'));
    }

    public function actionGetcity(){
        $id=$_GET['id'];
        $city = array_map(create_function('$record','return $record->attributes;'),City::model()->findAll("provinceId = '$id' order by id desc"));

        echo json_encode($city);
    }

    public function up($filename){
        if (!empty($filename)) {
            if ($_FILES[$filename]["error"] > 0) {
                $this->error('上传文件错误! 错误代码:' . $_FILES[$filename]['error'], '', 3);
            }
            $dir = Yii::app()->basePath . '/../file/';
            //echo $dir;die();
            $name = date('YmdHis') . mt_rand(0000, 9999);
            //$expand_arr = explode('/',$_FILES['media']['type']);
            //$expand = '.'.$expand_arr[1];
            $expand = '.' . pathinfo($_FILES[$filename]['name'], PATHINFO_EXTENSION);
            if (is_uploaded_file($_FILES[$filename]["tmp_name"])) {
                if (move_uploaded_file($_FILES[$filename]["tmp_name"], $dir . $name . $expand)) {
                    $path = $name . $expand;
                    //$path = isset($name) ? $name . $expand : '';
                } else {
                    $this->error('上传服务器临时错误');
                }
            } else {
                $this->error('非法上传方法');
            }
        }
        return $path;
    }

}
