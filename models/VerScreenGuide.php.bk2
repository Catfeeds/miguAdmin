<?php

/**
 * This is the model class for table "{{ver_screen_guide}}".
 *
 * The followings are the available columns in table '{{ver_screen_guide}}':
 * @property integer $id
 * @property string $gid
 * @property integer $siteId
 * @property integer $templateId
 * @property string $title
 * @property string $pic_true
 * @property string $pic_false
 * @property integer $order
 */
class VerScreenGuide extends CActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return '{{ver_screen_guide}}';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('gid, siteId, templateId, title, pic_true, pic_false', 'required'),
			array('siteId, templateId, order', 'numerical', 'integerOnly'=>true),
			array('gid', 'length', 'max'=>11),
			array('title', 'length', 'max'=>250),
			array('pic_true, pic_false', 'length', 'max'=>200),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, gid, siteId, templateId, title, pic_true, pic_false, order', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'gid' => 'Gid',
			'siteId' => 'Site',
			'templateId' => 'Template',
			'title' => 'Title',
			'pic_true' => 'Pic True',
			'pic_false' => 'Pic False',
			'order' => 'Order',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('gid',$this->gid,true);
		$criteria->compare('siteId',$this->siteId);
		$criteria->compare('templateId',$this->templateId);
		$criteria->compare('title',$this->title,true);
		$criteria->compare('pic_true',$this->pic_true,true);
		$criteria->compare('pic_false',$this->pic_false,true);
		$criteria->compare('order',$this->order);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return VerScreenGuide the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}

